exit
c.get('/data_imports')
c.get('/')
c = @this.instance_variable_get(:@client)
exit
c.token
c = @this.instance_variable_get(:@client)
@this.instance_variable_get(:@client).get('/data_imports')
@this.instance_variable_get(:@client).get('/')
@this.instance_variable_get(:@client)
@this.instance_variable_get(@client)
@this.instance_var
@this
@this.client
c
exit
item = @this.find id
item
c
log_lines[(-[line_count, log_lines.length].min)..-1]
line_count
exit
log_lines
line_count
lien_count
exit
line_count
exit
line_count
exit
line_count
exit
n
exit
number
log_lines
number
exit
e['logs'].first
e['logs']
e.keys
e = @this.logs(id)
exit
e = @this.find id
exit
tp([e])
tp(e)
e = @this.execute(id)
exit
ix.concat(12)
ix
ix.concat([11])
ix = [1,2,3]
i = [1,2,3]
self.errors
self
self.errors
self.errors = 123
self.errors
errors
errors = 123
errors
exit
self.errors
errors = 1
errors = nil
self.errors
self
errors
c
exit
c
exit
c
exit
c
exit
c
exit
e.keys
item['last_run']
e = items.first
c
exit
e['last_run_job']['status']
e['last_run_job']['stats']
e['last_run_job'].keys
e['source_label']
e['last_run_job']
e.keys
e = items.first
c
exit
destination = [item['dest_ds_id']. item['dest_schema_name'], item['dest_table_name']].join('.')
item
destination = [item['dest_ds_id']. item['dest_schema_name'], item['dest_table_name']].join('.')
item
destination = [item['dest_ds_id']. item['dest_schema_name'], item['dest_table_name']].join('.')
item = e
e.keys
e = items.first
c
exit
item = items.first
item = items.firsr
items.first['source_config']['dbtable']
items.first['source_config']['db_table']
items.first['source_config']['db_table']['ds_id']
items.first.keys
c
items
exit
e.map { |v| v['source_type']}.uniq
x["source_type"]
x["dest_schema_name"]
x["source_config"]
x["title"]
x.keys
x = e.first
e = @this.all
e = @this.execute("308")
exit
ex
e = @this.execute("308")
exit
@this.execute("308")
transform_id
exit
@this.method(:execute).source_location
@this
e = @this.execute(308)
c
exit
        end
          })
            mode: v['settings']['mode']
          v.slice(*%w{ id title owner_name created_at last_run }).merge({
@this.all.map do |v|
x.slice(*%w{ id title owner_name created_at last_run })
x.slice("id")
x.slice
x.keys
x
x.splice(%w{ id title owner_name created_at last_run })
x.slice(%w{ id title owner_name created_at last_run })
x = e.first
v = e.first
e
v = e.first
e = @this.all
exit
puts e.first["schedules"]
puts e.first["settings"]["mode"]
puts e.first["settings"]
puts e.first["tenant_id"]
puts e.first["tenant_id]
puts e.first["query"]
e.first["owner_name"]
e.first["description"]
e.first["title"]
e.first["id"]
e.first[:id]
e.first.keys
e.first
e = @this.all
@this.all
exit
JSON.parse(data.body)
JSON
data.body
data = e.all
e.all
e = Resource.new('data_sources', Holistics.client)
exit
e.all
e.list
e
e.name
e = Resource.new('data_sources', Holistics.client)
e = _
Resource.new('data_sources', Holistics.client)
Resource.new('data_sources')
Resource
